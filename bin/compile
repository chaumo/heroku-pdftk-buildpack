#!/usr/bin/env bash
BUILD_DIR=$1
CACHE_DIR=$2
PROFILE_PATH="$BUILD_DIR/.profile.d"

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# Store which STACK we are running on in the cache to bust the cache if it changes
if [ -f $CACHE_DIR/.apt/STACK ]; then
  CACHED_STACK=$(cat "$CACHE_DIR/.apt/STACK")
else
  CACHED_STACK=$STACK
fi

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"

mkdir -p $APT_CACHE_DIR $APT_STATE_DIR

# Ensure we store the STACK in the cache for next time.
# mkdir -p "$CACHE_DIR/.apt"
# echo "$STACK" > "$CACHE_DIR/.apt/STACK"

APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
APT_OPTIONS="$APT_OPTIONS --no-install-recommends"

topic "Installing PDFTK and dependencies..."
apt-get $APT_OPTIONS -y -d install --reinstall pdftk | indent

mkdir -p $BUILD_DIR/.apt

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done


mkdir -p $BUILD_DIR/vendor/bin $PROFILE_PATH
cp -a bin/pdftk-wrapper "$BUILD_DIR/vendor/bin/pdftk"
echo 'export PATH="$PATH:/app/vendor/bin"' >> $PROFILE_PATH/pdftk.sh

# cp -a bin/pdftk-wrapper "$BUILD_DIR/.heroku/bin/pdftk"

exit 0
